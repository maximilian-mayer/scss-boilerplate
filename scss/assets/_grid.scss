$grid-cols: 12 !default;
$grid-gutter: 2% !default;

$one_col: (100% - ($grid-gutter * ($grid-cols - 1))) / $grid-cols;

@mixin grid-cols($num) {
	width: ($one_col * $num) + ($grid-gutter * ($num - 1));
}

@mixin sub_grid-cols($num_child, $num_parent) {
	$parent_size: ($one_col * $num_parent) + ($grid-gutter * ($num_parent - 1));
	$child_size: ($one_col * $num_child) + ($grid-gutter * ($num_child - 1));
	margin-left: ($grid-gutter / $parent_size) * 100%;
	width: ($child_size / $parent_size) * 100%;
}

// build grid
.columns {
	@extend %clearfix;

	#{enumerate('.span', 1, $grid-cols, '')} {
		@include breakpoint-min($middle) {
			float: left;
			margin-left: $grid-gutter;
		}

		@include breakpoint($middle) {
			margin-bottom: $grid-gutter;

			&:last-child {
				margin-bottom: 0;
			}
		}
	}

	@for $i from 1 through $grid-cols {
		.span#{$i} {
			width: 100%;

			@include breakpoint-min($middle) {
				@include grid-cols($i);
			}

			// // nested grid
			// @for $j from 1 through ($i - 1) {
			// 	.span#{$j} {
			// 		@include sub_grid-cols($j, $i);
			// 	}
			// }
		}
	}

	> :first-child {
		margin-left: 0;
	}
}
